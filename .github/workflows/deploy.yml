name: Deploy to ACR

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout private repo
      uses: actions/checkout@v2
 
    - name: Login to Azure
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: insiares
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: build oush docker
      run: |
        docker build -t insiares/tightgroups:latest .
        docker push insiares/tightgroups:latest

    - name: Get Contaner ID
      id: get_container_id
      run: |
        container_id=$(az container list --resource-group devia_25 --query "[?name=='tg-container-group'].{Id:id}" -o tsv)
        echo "::set-output name=container_id::$container_id"

    - name: Delete existing container
      if: steps.get_container_id.outputs.container_id != ''
      run: |
        az container delete --resource-group devia_25 --name tg-container-group --yes

    - name: Run new app container
      env:
        METEO_USERNAME: ${{ secrets.METEO_USERNAME }}
        METEO_PASSWORD: ${{ secrets.METEO_PASSWORD }}
        BACKEND_URL: ${{ secrets.BACKEND_URL }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
      run: |

        az acr login --name tightgroups 
        ESCAPED_METEO_USERNAME=$(echo "${{ secrets.METEO_USERNAME }}" | sed 's/[&|]/\\&/g')
        ESCAPED_METEO_PASSWORD=$(echo "${{ secrets.METEO_PASSWORD }}" | sed 's/[&|]/\\&/g')
        ESCAPED_BACKEND_URL=$(echo "${{ secrets.BACKEND_URL }}" | sed 's/[&|]/\\&/g')
        ESCAPED_JWT_SECRET=$(echo "${{ secrets.JWT_SECRET }}" | sed 's/[&|]/\\&/g')
        ESCAPED_DATABASE_URL=$(echo "${{ secrets.DATABASE_URL }}" | sed 's/[&|]/\\&/g')
        ESCAPED_SHAREACCOUNT=$(echo "${{ secrets.SHARE_ACCOUNT }}" | sed 's/[&|]/\\&/g')
        ESCAPED_SHAREKEY=$(echo "${{ secrets.SHAREKEY }}" | sed 's/[&|]/\\&/g')

        sed -i "s|PLACEHOLDER_METEO_USERNAME|$ESCAPED_METEO_USERNAME|g" tightgroups_compose.yml
        sed -i "s|PLACEHOLDER_METEO_PASSWORD|$ESCAPED_METEO_PASSWORD|g" tightgroups_compose.yml
        sed -i "s|PLACEHOLDER_BACKEND_URL|$ESCAPED_BACKEND_URL|g" tightgroups_compose.yml
        sed -i "s|PLACEHOLDER_JWT_SECRET|$ESCAPED_JWT_SECRET|g" tightgroups_compose.yml
        sed -i "s|PLACEHOLDER_DATABASE_URL|$ESCAPED_DATABASE_URL|g" tightgroups_compose.yml
        sed -i "s|PLACEHOLDER_SHAREACCOUNT|$ESCAPED_SHAREACCOUNT|g" tightgroups_compose.yml
        sed -i "s|PLACEHOLDER_SHAREKEY|$ESCAPED_SHAREKEY|g" tightgroups_compose.yml

           az container create \
          --resource-group devia_25 \
          --name tg-container-group \
          --file ./tightgroups_compose.yml \
        
